services:
  db:
    image: postgres:16
    container_name: flask_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - flask-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_test
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - flask-network

  web:
    build: .
    container_name: flask_app
    command: >
      sh -c "
        echo 'Ожидание подключения к БД...' &&
        sleep 5 &&
        flask db upgrade ||
          (flask db init && flask db migrate && flask db upgrade);
        gunicorn --bind 0.0.0.0:5050 app:app"
    volumes:
      - .:/app
    ports:
      - "8081:5090"
    environment:
      FLASK_APP: app
#      FLASK_ENV: production
    depends_on:
      - db
    networks:
      - flask-network

#volumes:
#  postgres_data:

networks:
  flask-network:
    driver: bridge